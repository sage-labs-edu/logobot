(()=>{"use strict";var e={603:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LogoError=void 0;class n extends Error{constructor(e,t){super(e),this.name="LogoError",this.line=t.line,this.column=t.column,Object.setPrototypeOf(this,n.prototype)}toString(){return`${this.name} at line ${this.line}, column ${this.column}: ${this.message}`}}t.LogoError=n},676:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.runLogo=void 0;var s=n(735);Object.defineProperty(t,"runLogo",{enumerable:!0,get:function(){return s.runLogo}})},984:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Interpreter=void 0,t.Interpreter=class{constructor(){this.variables=new Map}evaluateExpression(e){switch(e.type){case"number":return e.value;case"variable":{const t=this.variables.get(e.value);if(void 0===t)throw new Error(`Undefined variable: ${e.value}`);return t}case"binary":{const t=this.evaluateExpression(e.left),n=this.evaluateExpression(e.right);switch(e.operator){case"+":return t+n;case"-":return t-n;case"*":return t*n;case"/":return t/n;default:throw new Error(`Unknown operator: ${e.operator}`)}}case"comparison":{const t=this.evaluateExpression(e.left),n=this.evaluateExpression(e.right);switch(e.operator){case"<":return t<n;case">":return t>n;case"<=":return t<=n;case">=":return t>=n;case"==":return t===n;case"!=":return t!==n;default:throw new Error(`Unknown comparison operator: ${e.operator}`)}}case"logical":{const t=this.evaluateExpression(e.left);if("and"===e.operator&&!t)return!1;if("or"===e.operator&&t)return!0;const n=this.evaluateExpression(e.right);switch(e.operator){case"and":return t&&n;case"or":return t||n;default:throw new Error(`Unknown logical operator: ${e.operator}`)}}default:throw new Error(`Unknown expression type: ${e.type}`)}}evaluateRange(e){return{start:Math.floor(this.evaluateExpression(e.start)),end:Math.floor(this.evaluateExpression(e.end))}}interpret(e){switch(e.type){case"forward":return[{type:"move",value:this.evaluateExpression(e.distance)}];case"backward":return[{type:"move",value:-this.evaluateExpression(e.distance)}];case"turn":return[{type:"turn",value:this.evaluateExpression(e.angle)}];case"leftTurn":return[{type:"turn",value:-this.evaluateExpression(e.angle)}];case"setPenColor":return[{type:"setPenColor",value:e.color}];case"setPenThickness":return[{type:"setPenThickness",value:this.evaluateExpression(e.thickness)}];case"setPenOpacity":return[{type:"setPenOpacity",value:this.evaluateExpression(e.opacity)}];case"setPenStyle":return[{type:"setPenStyle",value:e.style}];case"setPenCap":return[{type:"setPenCap",value:e.cap}];case"penUp":return[{type:"penUp"}];case"penDown":return[{type:"penDown"}];case"repeat":{const t=Math.floor(this.evaluateExpression(e.count)),n=[];for(let s=0;s<t;s++)for(const t of e.body)n.push(...this.interpret(t));return n}case"while":{const t=[];let n=0;const s=100;for(;this.evaluateExpression(e.condition);){if(n++>s)throw new Error("Maximum while loop iterations exceeded");for(const n of e.body)t.push(...this.interpret(n))}return t}case"if":{const t=[];if(this.evaluateExpression(e.mainBranch.condition))for(const n of e.mainBranch.body)t.push(...this.interpret(n));else{let n=!1;for(const s of e.elifBranches)if(this.evaluateExpression(s.condition)){for(const e of s.body)t.push(...this.interpret(e));n=!0;break}if(!n&&e.elseBranch)for(const n of e.elseBranch)t.push(...this.interpret(n))}return t}case"for":{const t=this.evaluateRange(e.range),n=[],s=this.variables.get(e.variable);for(let s=t.start;s<=t.end;s++){this.variables.set(e.variable,s);for(const t of e.body)n.push(...this.interpret(t))}return void 0!==s?this.variables.set(e.variable,s):this.variables.delete(e.variable),n}case"assignment":{const t=this.evaluateExpression(e.value);return this.variables.set(e.name,t),[]}default:return[]}}}},245:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Lexer=void 0;const s=n(603);t.Lexer=class{constructor(e){this.source=e,this.current=0,this.start=0,this.line=1,this.column=1,this.tokens=[],this.keywords={fw:"identifier",bw:"identifier",rt:"identifier",lt:"identifier",pen:"identifier",repeat:"repeat",while:"while",if:"if",elif:"elif",else:"else",for:"for",in:"in",and:"and",or:"or",end:"end"}}tokenize(){for(;!this.isAtEnd();)this.start=this.current,this.scanToken();return this.tokens.push({type:"eof",lexeme:"",line:this.line,column:this.column}),console.log("All tokens:",JSON.stringify(this.tokens,null,2)),this.tokens}scanToken(){const e=this.advance();switch(e){case"(":this.addToken("leftParen");break;case")":this.addToken("rightParen");break;case".":this.addToken("dot");break;case"+":this.addToken("plus");break;case"-":this.addToken("minus");break;case"*":this.addToken("multiply");break;case"/":this.addToken("divide");break;case":":this.addToken("colon");break;case"[":this.addToken("leftBracket");break;case"]":this.addToken("rightBracket");break;case"\n":this.addToken("newline"),this.line++,this.column=1;break;case"=":this.match("="),this.addToken("equal");break;case"!":if(!this.match("="))throw new s.LogoError(`Unexpected character: '${e}'`,{line:this.line,column:this.column});this.addToken("notEqual");break;case"<":this.addToken(this.match("=")?"lessEqual":"lessThan");break;case">":this.addToken(this.match("=")?"greaterEqual":"greaterThan");break;case" ":case"\r":case"\t":this.column++;break;case'"':this.string('"');break;case"'":this.string("'");break;default:if(this.isDigit(e))this.number();else{if(!this.isAlpha(e))throw new s.LogoError(`Unexpected character: '${e}'`,{line:this.line,column:this.column});this.identifier()}}}identifier(){for(;this.isAlphaNumeric(this.peek());)this.advance();const e=this.source.substring(this.start,this.current),t=this.keywords[e]||"identifier";console.log("Found identifier:",e,"type:",t),this.addToken(t)}string(e){for(;this.peek()!==e&&!this.isAtEnd();)"\n"===this.peek()&&this.line++,this.advance();if(this.isAtEnd())throw new Error("Unterminated string");this.advance();const t=this.source.substring(this.start+1,this.current-1);this.addToken("string",t)}number(){for(;this.isDigit(this.peek());)this.advance();if("."===this.peek()&&this.isDigit(this.peekNext()))for(this.advance();this.isDigit(this.peek());)this.advance();const e=parseFloat(this.source.substring(this.start,this.current));this.addToken("number",e)}isAtEnd(){return this.current>=this.source.length}advance(){return this.column++,this.source[this.current++]}peek(){return this.isAtEnd()?"\0":this.source[this.current]}peekNext(){return this.current+1>=this.source.length?"\0":this.source[this.current+1]}isDigit(e){return e>="0"&&e<="9"}isAlpha(e){return e>="a"&&e<="z"||e>="A"&&e<="Z"||"_"===e}isAlphaNumeric(e){return this.isAlpha(e)||this.isDigit(e)}addToken(e,t){const n=this.source.substring(this.start,this.current);this.tokens.push({type:e,lexeme:n,literal:void 0!==t?t:n,line:this.line,column:this.column}),this.column+=this.current-this.start}makeToken(e,t="",n){return{type:e,lexeme:t,literal:n,line:this.line,column:this.column}}match(e){return!this.isAtEnd()&&this.source[this.current]===e&&(this.current++,this.column++,!0)}}},735:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.runLogo=void 0;const s=n(245),r=n(550),i=n(984);t.runLogo=function(e){const t=new s.Lexer(e).tokenize();console.log("Tokens:",t);const n=new r.Parser(t).parse();console.log("AST:",JSON.stringify(n,null,2));const o=new i.Interpreter,a=[];for(const e of n)a.push(...o.interpret(e));return a}},550:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Parser=void 0;const s=n(603);t.Parser=class{constructor(e){this.tokens=e,this.current=0}parse(){const e=[];for(;!this.isAtEnd()&&(this.skipNewlines(),!this.isAtEnd());)try{const t=this.parseCommand();e.push(t)}catch(e){throw console.error("Error while parsing:",e),console.log("Current token:",this.peek()),console.log("Previous token:",this.previous()),e}return e}parseCommand(){this.skipNewlines();const e=this.peek();if(console.log("Parsing command, token:",e),"for"===e.type)return console.log("Found for loop"),this.advance(),this.parseFor();if("identifier"===e.type){if(this.advance(),this.check("equal")){const t=e.lexeme;if(this.isKeyword(t))throw new s.LogoError(`Cannot use keyword '${t}' as a variable name`,{line:e.line,column:e.column});return this.advance(),{type:"assignment",name:t,value:this.parseExpression()}}switch(e.lexeme){case"fw":return this.parseForward();case"bw":return this.parseBackward();case"rt":return this.parseTurn();case"lt":return this.parseLeftTurn();case"pen":return this.parsePenCommand();default:throw new Error("Unknown command")}}else{if("repeat"===e.type)return this.advance(),this.parseRepeat();if("while"===e.type)return this.advance(),this.parseWhile();if("if"===e.type)return this.advance(),this.parseIf();if("end"===e.type||"elif"===e.type||"else"===e.type)throw new Error(`Unexpected ${e.type} token outside of a block`)}throw new Error(`Expected command, got ${e.type} (${e.lexeme})`)}skipNewlines(){for(;this.check("newline");)this.advance()}parsePenCommand(){if(!this.check("dot"))throw new Error("Expected '.' after 'pen'");this.advance();const e=this.consume("identifier","Expected property name");if("up"===e.lexeme)return this.consume("leftParen","Expected '('"),this.consume("rightParen","Expected ')'"),{type:"penUp"};if("down"===e.lexeme)return this.consume("leftParen","Expected '('"),this.consume("rightParen","Expected ')'"),{type:"penDown"};switch(this.consume("equal","Expected '='"),e.lexeme){case"color":return{type:"setPenColor",color:this.consume("string","Expected color string").literal};case"thickness":return{type:"setPenThickness",thickness:this.parseExpression()};case"opacity":{const e=this.parseExpression();if("number"===this.previous().type){const e=this.previous().literal;if(e<0||e>1)throw new s.LogoError("Opacity must be between 0 and 1",{line:this.previous().line,column:this.previous().column})}return{type:"setPenOpacity",opacity:e}}case"style":{const e=this.consume("string","Expected style string");if(!["line","dash","dot"].includes(e.literal))throw new Error("Invalid pen style");return{type:"setPenStyle",style:e.literal}}case"cap":{const e=this.consume("string","Expected cap string");if(!["round","butt","square"].includes(e.literal))throw new Error("Invalid pen cap style");return{type:"setPenCap",cap:e.literal}}default:throw new Error("Unknown pen property")}}parseForward(){this.consume("leftParen","Expected '(' after fw");const e=this.parseExpression();return this.consume("rightParen","Expected ')'"),{type:"forward",distance:e}}parseBackward(){this.consume("leftParen","Expected '(' after bw");const e=this.parseExpression();return this.consume("rightParen","Expected ')'"),{type:"backward",distance:e}}parseTurn(){this.consume("leftParen","Expected '(' after rt");const e=this.parseExpression();return this.consume("rightParen","Expected ')'"),{type:"turn",angle:e}}parseLeftTurn(){this.consume("leftParen","Expected '(' after lt");const e=this.parseExpression();return this.consume("rightParen","Expected ')'"),{type:"leftTurn",angle:e}}parseRepeat(){const e=this.parseExpression();this.consume("colon","Expected ':' after repeat count"),this.skipNewlines();const t=[];for(;!this.check("end")&&!this.isAtEnd();)this.skipNewlines(),this.check("end")||t.push(this.parseCommand());return this.consume("end","Expected 'end' after repeat block"),{type:"repeat",count:e,body:t}}parseWhile(){const e=this.parseExpression();this.consume("colon","Expected ':' after while condition"),this.skipNewlines();const t=[];for(;!this.check("end")&&!this.isAtEnd();)this.skipNewlines(),this.check("end")||t.push(this.parseCommand());return this.consume("end","Expected 'end' after while block"),{type:"while",condition:e,body:t}}parseExpression(){let e=this.parseLogicalOr();return this.match("notEqual","equal","lessThan","greaterThan","lessEqual","greaterEqual")&&(e={type:"comparison",operator:this.operatorFromToken(this.previous().type),left:e,right:this.parseLogicalOr()}),e}parseLogicalOr(){let e=this.parseLogicalAnd();for(;this.match("or");)e={type:"logical",operator:"or",left:e,right:this.parseLogicalAnd()};return e}parseLogicalAnd(){let e=this.parseComparison();for(;this.match("and");)e={type:"logical",operator:"and",left:e,right:this.parseComparison()};return e}parseComparison(){let e=this.parseAdditive();for(;this.match("notEqual","equal","lessThan","greaterThan","lessEqual","greaterEqual");)e={type:"comparison",operator:this.operatorFromToken(this.previous().type),left:e,right:this.parseAdditive()};return e}parseAdditive(){let e=this.parseMultiplicative();for(;this.match("plus","minus");)e={type:"binary",operator:"plus"===this.previous().type?"+":"-",left:e,right:this.parseMultiplicative()};return e}parseMultiplicative(){let e=this.parsePrimary();for(;this.match("multiply","divide");)e={type:"binary",operator:"multiply"===this.previous().type?"*":"/",left:e,right:this.parsePrimary()};return e}parsePrimary(){if(this.match("number"))return{type:"number",value:this.previous().literal};if(this.match("identifier"))return{type:"variable",value:this.previous().lexeme};if(this.match("leftParen")){const e=this.parseExpression();return this.consume("rightParen","Expected ')' after expression"),e}throw new s.LogoError("Expected expression",{line:this.peek().line,column:this.peek().column})}operatorFromToken(e){switch(e){case"notEqual":return"!=";case"equal":return"==";case"lessThan":return"<";case"greaterThan":return">";case"lessEqual":return"<=";case"greaterEqual":return">=";default:return e}}consume(e,t){if(this.check(e))return this.advance();throw new Error(t)}check(e){return!this.isAtEnd()&&this.peek().type===e}advance(){return this.isAtEnd()||this.current++,this.previous()}isAtEnd(){return this.current>=this.tokens.length||"eof"===this.peek().type}peek(){return this.tokens[this.current]}previous(){return this.tokens[this.current-1]}match(...e){for(const t of e)if(this.check(t))return this.advance(),!0;return!1}parseIf(){const e=this.parseConditionalBranch(),t=[];let n;for(;this.match("elif");)t.push(this.parseConditionalBranch());return this.match("else")&&(this.consume("colon","Expected ':' after else"),this.skipNewlines(),n=this.parseBlock()),this.consume("end","Expected 'end' after if block"),{type:"if",mainBranch:e,elifBranches:t,elseBranch:n}}parseConditionalBranch(){const e=this.parseExpression();return console.log("After parsing expression, current token:",this.peek()),this.consume("colon","Expected ':' after condition"),this.skipNewlines(),{condition:e,body:this.parseBlock()}}parseBlock(){const e=[];for(;!(this.check("end")||this.check("elif")||this.check("else")||this.isAtEnd());)this.check("newline")?this.advance():e.push(this.parseCommand());return e}parseFor(){console.log("Parsing for loop, current token:",this.peek());const e=this.consume("identifier","Expected loop variable").lexeme;console.log("Got variable:",e),this.consume("in","Expected 'in' after loop variable"),this.consume("leftBracket","Expected '[' to start range");const t=this.parseExpression();this.consume("colon","Expected ':' in range");const n=this.parseExpression();this.consume("rightBracket","Expected ']' to end range"),this.consume("colon","Expected ':' after range"),this.skipNewlines();const s=this.parseBlock();return this.consume("end","Expected 'end' after for block"),{type:"for",variable:e,range:{type:"range",start:t,end:n},body:s}}isKeyword(e){return["for","in","end","if","else","elif","while","repeat","and","or"].includes(e)}}},419:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TurtleRenderer=void 0;const n={color:"#00cecb",thickness:2,style:"line",cap:"round",opacity:1,dashArray:""};t.TurtleRenderer=class{constructor(e,t=800,s,r){this.container=e,this.defaultSize=t,this.x=0,this.y=0,this.angle=-90,this.penDown=!0,this.statusBar=null;const i=e.getBoundingClientRect();this.width=i.width||t,this.height=i.height||t,this.pointerOptions={size:10,color:"#ff69b4",anchorPoint:[0,-.5],...s},this.penOptions={...n,...r},this.svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.svg.setAttribute("width","100%"),this.svg.setAttribute("height","100%"),this.svg.setAttribute("viewBox",`0 0 ${this.width} ${this.height}`),this.svg.setAttribute("preserveAspectRatio","xMidYMid meet"),this.linesGroup=document.createElementNS("http://www.w3.org/2000/svg","g"),this.turtleGroup=document.createElementNS("http://www.w3.org/2000/svg","g"),this.svg.appendChild(this.linesGroup),this.svg.appendChild(this.turtleGroup),e.appendChild(this.svg),800===t&&(this.statusBar=document.createElement("div"),this.statusBar.className="turtle-status",e.appendChild(this.statusBar)),this.reset()}createTurtlePointer(){const{size:e,color:t,anchorPoint:n}=this.pointerOptions,s=n[0]*e,r=n[1]*e,i=[[-e/2-s,-e/2-r],[e/2-s,-e/2-r],[0-s,e-r]].map((([e,t])=>`${e},${t}`)).join(" "),o=document.createElementNS("http://www.w3.org/2000/svg","polygon");o.setAttribute("points",i),o.setAttribute("fill",t),o.setAttribute("transform","rotate(-90)"),this.turtleGroup.appendChild(o),this.updateTurtleTransform()}updateTurtleTransform(){if(this.turtleGroup.setAttribute("transform",`translate(${this.x} ${this.y}) rotate(${this.angle})`),this.statusBar){const e=this.width/2,t=this.height/2,n=Math.round(this.x-e),s=Math.round(t-this.y);let r=(this.angle+90)%360;r<0&&(r+=360),this.statusBar.textContent=`Angle: ${r.toFixed(1)}° | X: ${n} | Y: ${s}`}}move(e){const t=this.angle*Math.PI/180,n=this.x+e*Math.cos(t),s=this.y+e*Math.sin(t);if(this.penDown){const e=document.createElementNS("http://www.w3.org/2000/svg","line");e.setAttribute("x1",this.x.toString()),e.setAttribute("y1",this.y.toString()),e.setAttribute("x2",n.toString()),e.setAttribute("y2",s.toString()),e.setAttribute("stroke",this.penOptions.color),e.setAttribute("stroke-width",this.penOptions.thickness.toString()),e.setAttribute("stroke-linecap",this.penOptions.cap),e.setAttribute("opacity",this.penOptions.opacity.toString()),this.penOptions.dashArray&&e.setAttribute("stroke-dasharray",this.penOptions.dashArray),this.linesGroup.appendChild(e)}this.x=n,this.y=s,this.updateTurtleTransform()}turn(e){this.angle=(this.angle+e)%360,this.angle<0&&(this.angle+=360),this.updateTurtleTransform()}executeCommands(e){this.clear();for(const t of e)switch(t.type){case"move":this.move(t.value);break;case"turn":this.turn(t.value);break;case"setPenColor":this.penOptions.color=t.value;break;case"setPenThickness":this.penOptions.thickness=t.value;break;case"setPenOpacity":this.penOptions.opacity=t.value;break;case"setPenStyle":this.penOptions.style=t.value,"dash"===t.value?this.penOptions.dashArray="10,5":"dot"===t.value?this.penOptions.dashArray="2,2":this.penOptions.dashArray="";break;case"setPenCap":this.penOptions.cap=t.value;break;case"penUp":this.penDown=!1;break;case"penDown":this.penDown=!0}}clear(){for(;this.linesGroup.firstChild;)this.linesGroup.removeChild(this.linesGroup.firstChild);this.reset()}reset(){for(this.x=this.width/2,this.y=this.height/2,this.angle=-90,this.penDown=!0,this.penOptions={...n};this.turtleGroup.firstChild;)this.turtleGroup.removeChild(this.turtleGroup.firstChild);this.createTurtlePointer()}updatePointerOptions(e){for(this.pointerOptions={...this.pointerOptions,...e};this.turtleGroup.firstChild;)this.turtleGroup.removeChild(this.turtleGroup.firstChild);this.createTurtlePointer()}}}},t={};function n(s){var r=t[s];if(void 0!==r)return r.exports;var i=t[s]={exports:{}};return e[s](i,i.exports,n),i.exports}(()=>{console.log("Test visual script loading...");const e=n(676),t=n(419);console.log("Imports completed");const s=document.getElementById("test-container");console.log("Found container:",s),s.innerHTML="";const r=document.createElement("h1");r.textContent="Logo Turtle Graphics Test Cases",r.style.width="100%",r.style.textAlign="center",r.style.marginBottom="20px",s.appendChild(r),s.style.display="flex",s.style.flexWrap="wrap",s.style.gap="20px",s.style.padding="20px",[{name:"Default Line",code:"fw(50)",expected:"Should draw a line with default settings (#00cecb, 2px, round cap)"},{name:"Custom Color",code:'pen.color = "red"\nfw(50)',expected:"Should draw a red line"},{name:"Custom Thickness",code:"pen.thickness = 5\nfw(50)",expected:"Should draw a thick line (5px)"},{name:"Dashed Line",code:'pen.style = "dash"\nfw(50)',expected:"Should draw a dashed line"},{name:"Dotted Line",code:'pen.style = "dot"\nfw(50)',expected:"Should draw a dotted line"},{name:"Square Cap",code:'pen.thickness = 10\npen.cap = "square"\nfw(50)',expected:"Should draw a thick line with square ends"},{name:"Butt Cap",code:'pen.thickness = 10\npen.cap = "butt"\nfw(50)',expected:"Should draw a thick line with flat ends"},{name:"Semi-transparent",code:"pen.opacity = 0.5\nfw(50)",expected:"Should draw a semi-transparent line"},{name:"Combined Styles",code:'pen.color = "#ff69b4"\npen.thickness = 8\npen.style = "dash"\npen.opacity = 0.7\nfw(50)',expected:"Should draw a thick, semi-transparent, dashed pink line"},{name:"Square",code:"fw(50)\nrt(90)\nfw(50)\nrt(90)\nfw(50)\nrt(90)\nfw(50)",expected:"Should draw a square with default pen settings"},{name:"Styled Square",code:'pen.color = "purple"\npen.thickness = 3\npen.style = "dash"\nfw(50)\nrt(90)\nfw(50)\nrt(90)\nfw(50)\nrt(90)\nfw(50)',expected:"Should draw a purple dashed square"},{name:"Repeat 3 times",code:"repeat 3: fw(20) rt(45) end",expected:"Should draw 3 lines with 45° turns"},{name:"Variable Repeat",code:"x = 3 repeat x: fw(x) rt(45+x) end",expected:"Should use variable x in repeat"},{name:"Nested Repeat",code:"\n          repeat 3:\n            pen.color = 'blue'\n            fw(20)\n            rt(45)\n            repeat 5:\n              pen.color = 'red'\n              fw(30)\n              lt(65)\n            end\n          end\n        ",expected:"Should draw nested repeat patterns"},{name:"Simple While Loop",code:"\n          x = 0\n          while x < 4:\n            fw(50)\n            rt(90)\n            x = x + 1\n          end\n        ",expected:"Should draw a square using while loop"},{name:"While with Multiple Variables",code:"\n          x = 20\n          y = 90\n          while x < 100:\n            fw(x)\n            rt(y)\n            x = x + 20\n            y = y - 15\n          end\n        ",expected:"Should draw an expanding spiral"},{name:"While with Complex Condition",code:"\n          x = 2\n          y = 3\n          z = 13\n          while ((x < y) and (y < z)) or z > 10:\n            pen.color = 'blue'\n            fw(100)\n            rt(35)\n            z = z - 2\n            pen.color = 'red'\n            fw(50)\n            lt(20)\n          end\n        ",expected:"Should draw a complex pattern with color changes"},{name:"Nested While Loops",code:"\n          x = 0\n          while x < 3:\n            y = 0\n            while y < 4:\n              fw(30)\n              rt(90)\n              y = y + 1\n            end\n            lt(120)\n            x = x + 1\n          end\n        ",expected:"Should draw three squares arranged in a triangle"},{name:"Repeat inside While",code:"\n          x = 0\n          while x < 2:\n            repeat 3:\n              fw(20)\n              rt(60)\n            end\n            x = x + 1\n          end\n        ",expected:"Should draw two sets of three lines forming triangles"},{name:"While inside Repeat",code:"\n          repeat 2:\n            y = 0\n            while y < 3:\n              fw(30)\n              rt(90)\n              y = y + 1\n            end\n            lt(120)\n          end\n        ",expected:"Should draw two squares with a 120-degree turn between them"},{name:"Nested While and Repeat",code:"\n          x = 0\n          while x < 2:\n            repeat 2:\n              y = 0\n              while y < 2:\n                fw(20)\n                rt(45)\n                y = y + 1\n              end\n              lt(90)\n            end\n            x = x + 1\n          end\n        ",expected:"Should draw a complex pattern with nested loops"},{name:"Basic If/Else",code:"\n          x = 3\n          y = 4\n          if x != y:\n            pen.color = 'blue'\n            fw(30)\n          elif x == 5:\n            pen.color = 'green'\n            bw(30)\n          else:\n            pen.color = 'black'\n            fw(30)\n            rt(30)\n          end\n        ",expected:"Should draw a blue line if x != y"},{name:"If with Repeat",code:"\n          x = 2\n          if x < 5:\n            repeat 3:\n              fw(20)\n              rt(60)\n            end\n          else:\n            fw(50)\n          end\n        ",expected:"Should draw a triangle if x < 5"},{name:"If with While",code:"\n          x = 0\n          if x == 0:\n            while x < 3:\n              fw(20)\n              rt(90)\n              x = x + 1\n            end\n          else:\n            fw(50)\n          end\n        ",expected:"Should draw a square if x == 0"},{name:"Complex Nested Conditions",code:"\n          x = 1\n          y = 2\n          if x < y:\n            repeat 2:\n              if y > 1:\n                fw(20)\n                rt(45)\n              else:\n                fw(10)\n              end\n            end\n          else:\n            while x < 3:\n              fw(30)\n              rt(90)\n              x = x + 1\n            end\n          end\n        ",expected:"Should draw a pattern based on nested conditions"},{name:"Simple For Loop",code:"\n          for i in [1:4]:\n            fw(30)\n            rt(90)\n          end\n        ",expected:"Should draw a square using for loop"},{name:"Variable Range For Loop",code:"\n          startVal = 1\n          endVal = 5\n          for i in [startVal:endVal]:\n            pen.color = 'blue'\n            fw(i * 20)\n            rt(72)\n          end\n        ",expected:"Should draw an expanding spiral with increasing line lengths"},{name:"Nested For Loops",code:"\n          for i in [1:3]:\n            pen.color = 'red'\n            for j in [1:2]:\n              fw(i * 20)\n              rt(j * 60)\n            end\n            pen.color = 'blue'\n            fw(10)\n          end\n        ",expected:"Should draw a complex pattern with nested loops and color changes"},{name:"For Loop with Conditions",code:"\n          for i in [1:5]:\n            if i > 2:\n              pen.color = 'green'\n              fw(i * 15)\n            else:\n              pen.color = 'red'\n              fw(10)\n            end\n            rt(72)\n          end\n        ",expected:"Should draw a pattern with different colors based on loop index"},{name:"For Loop with Multiple Controls",code:"\n          for i in [1:3]:\n            repeat i:\n              fw(30)\n              rt(120)\n            end\n            while i < 3:\n              fw(20)\n              rt(45)\n              i = i + 1\n            end\n          end\n        ",expected:"Should draw a complex pattern using multiple control structures"}].forEach((n=>{const r=document.createElement("div");r.style.border="1px solid #ccc",r.style.padding="15px",r.style.width="250px",r.style.borderRadius="5px",r.style.backgroundColor="#fff";const i=document.createElement("h3");i.textContent=n.name,i.style.margin="0 0 10px 0",r.appendChild(i);const o=document.createElement("pre");o.textContent=n.code,o.style.backgroundColor="#f5f5f5",o.style.padding="10px",o.style.borderRadius="4px",o.style.overflowX="auto",o.style.fontSize="12px",r.appendChild(o);const a=document.createElement("div");a.textContent=n.expected,a.style.color="#666",a.style.fontSize="0.9em",a.style.marginTop="10px",r.appendChild(a);const h=document.createElement("div");h.style.width="200px",h.style.height="200px",h.style.border="1px solid #eee",h.style.marginTop="10px",r.appendChild(h);const l=new t.TurtleRenderer(h,200),c=(0,e.runLogo)(n.code);l.executeCommands(c),s.appendChild(r)}))})()})();